C51 COMPILER V9.56.0.0   DEBUG                                                             11/08/2019 19:46:07 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN Debug.OBJ
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE Debug.C LARGE OPTIMIZE(8,SPEED) BROWSE NOAREGS INCDIR(..\VendorDefin
                    -edDev) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : Debug.C
   3          * Author             : WCH
   4          * Version            : V1.2
   5          * Date               : 2018/02/26
   6          * Description        : CH554 DEBUG Interface
   7                               CH554Ö÷ÆµÐÞ¸Ä¡¢ÑÓÊ±º¯Êý¶¨Òå
   8                               ´®¿Ú0ºÍ´®¿Ú1³õÊ¼»¯
   9                               ´®¿Ú0ºÍ´®¿Ú1µÄÊÕ·¢×Óº¯Êý
  10                               ¿´ÃÅ¹·³õÊ¼»¯
  11          *******************************************************************************/
  12          
  13          #include "CH554.H"
  14          #include "Debug.H"
  15          
  16          /*******************************************************************************
  17          * Function Name  : CfgFsys( )
  18          * Description    : CH554Ê±ÖÓÑ¡ÔñºÍÅäÖÃº¯Êý,Ä¬ÈÏÊ¹ÓÃFsys 6MHz£¬FREQ_SYS¿ÉÒÔÍ¨¹ý
  19                             CLOCK_CFGÅäÖÃµÃµ½£¬¹«Ê½ÈçÏÂ£º
  20                             Fsys = (Fosc * 4/(CLOCK_CFG & MASK_SYS_CK_SEL);¾ßÌåÊ±ÖÓÐèÒª×Ô¼ºÅäÖÃ
  21          * Input          : None
  22          * Output         : None
  23          * Return         : None
  24          *******************************************************************************/
  25          void  CfgFsys( ) {
  26   1      #if OSC_EN_XT
                SAFE_MOD = 0x55;
                SAFE_MOD = 0xAA;
                CLOCK_CFG |= bOSC_EN_XT;                          //Ê¹ÄÜÍâ²¿¾§Õñ
                CLOCK_CFG &= ~bOSC_EN_INT;                        //¹Ø±ÕÄÚ²¿¾§Õñ
              #endif
  32   1        SAFE_MOD = 0x55;
  33   1        SAFE_MOD = 0xAA;
  34   1      #if FREQ_SYS == 24000000
                CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 24MHz
              #endif
  37   1      #if FREQ_SYS == 16000000
                CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 16MHz
              #endif
  40   1      #if FREQ_SYS == 12000000
  41   1        CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 12MHz
  42   1      #endif
  43   1      #if FREQ_SYS == 6000000
                CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 6MHz
              #endif
  46   1      #if FREQ_SYS == 3000000
                CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz
              #endif
  49   1      #if FREQ_SYS == 750000
                CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz
              #endif
  52   1      #if FREQ_SYS == 187500
                CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5KHz
              #endif
C51 COMPILER V9.56.0.0   DEBUG                                                             11/08/2019 19:46:07 PAGE 2   

  55   1        SAFE_MOD = 0x00;
  56   1      }
  57          
  58          /*******************************************************************************
  59          * Function Name  : mDelayus(UNIT16 n)
  60          * Description    : usÑÓÊ±º¯Êý
  61          * Input          : UNIT16 n
  62          * Output         : None
  63          * Return         : None
  64          *******************************************************************************/
  65          void  mDelayuS( UINT16 n ) { // ÒÔuSÎªµ¥Î»ÑÓÊ±
  66   1      #ifdef  FREQ_SYS
  67   1      #if   FREQ_SYS <= 6000000
                n >>= 2;
              #endif
  70   1      #if   FREQ_SYS <= 3000000
                n >>= 2;
              #endif
  73   1      #if   FREQ_SYS <= 750000
                n >>= 4;
              #endif
  76   1      #endif
  77   1        while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  78   2          ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  79   2      #ifdef  FREQ_SYS
  80   2      #if   FREQ_SYS >= 14000000
                  ++ SAFE_MOD;
              #endif
  83   2      #if   FREQ_SYS >= 16000000
                  ++ SAFE_MOD;
              #endif
  86   2      #if   FREQ_SYS >= 18000000
                  ++ SAFE_MOD;
              #endif
  89   2      #if   FREQ_SYS >= 20000000
                  ++ SAFE_MOD;
              #endif
  92   2      #if   FREQ_SYS >= 22000000
                  ++ SAFE_MOD;
              #endif
  95   2      #if   FREQ_SYS >= 24000000
                  ++ SAFE_MOD;
              #endif
  98   2      #endif
  99   2          -- n;
 100   2        }
 101   1      }
 102          
 103          /*******************************************************************************
 104          * Function Name  : mDelayms(UNIT16 n)
 105          * Description    : msÑÓÊ±º¯Êý
 106          * Input          : UNIT16 n
 107          * Output         : None
 108          * Return         : None
 109          *******************************************************************************/
 110          void  mDelaymS( UINT16 n ) {                                                // ÒÔmSÎªµ¥Î»ÑÓÊ±
 111   1        while ( n ) {
 112   2      #ifdef  DELAY_MS_HW
                  while ( ( TKEY_CTRL & bTKC_IF ) == 0 );
                  while ( TKEY_CTRL & bTKC_IF );
              #else
 116   2          mDelayuS( 1000 );
C51 COMPILER V9.56.0.0   DEBUG                                                             11/08/2019 19:46:07 PAGE 3   

 117   2      #endif
 118   2          -- n;
 119   2        }
 120   1      }
 121          
 122          /*******************************************************************************
 123          * Function Name  : CH554UART0Alter()
 124          * Description    : CH554´®¿Ú0Òý½ÅÓ³Éä,´®¿ÚÓ³Éäµ½P1.2ºÍP1.3
 125          * Input          : None
 126          * Output         : None
 127          * Return         : None
 128          *******************************************************************************/
 129          void CH554UART0Alter() {
 130   1        PIN_FUNC |= bUART0_PIN_X;                                                  //´®¿ÚÓ³Éäµ½P1.2ºÍP1.3
 131   1      }
 132          
 133          /*******************************************************************************
 134          * Function Name  : mInitSTDIO()
 135          * Description    : CH554´®¿Ú0³õÊ¼»¯,Ä¬ÈÏÊ¹ÓÃT1×÷UART0µÄ²¨ÌØÂÊ·¢ÉúÆ÷,Ò²¿ÉÒÔÊ¹ÓÃT2
 136                             ×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷
 137          * Input          : None
 138          * Output         : None
 139          * Return         : None
 140          *******************************************************************************/
 141          void  mInitSTDIO( ) {
 142   1        UINT32 x;
 143   1        UINT8 x2;
 144   1      
 145   1        SM0 = 0;
 146   1        SM1 = 1;
 147   1        SM2 = 0;                                                                   //´®¿Ú0Ê¹ÓÃÄ£Ê½1
 148   1        //Ê¹ÓÃTimer1×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷
 149   1        RCLK = 0;                                                                  //UART0½ÓÊÕÊ±ÖÓ
 150   1        TCLK = 0;                                                                  //UART0·¢ËÍÊ±ÖÓ
 151   1        PCON |= SMOD;
 152   1        x = 10 * FREQ_SYS / UART0_BUAD / 16;                                       //Èç¹û¸ü¸ÄÖ÷Æµ£¬×¢ÒâxµÄÖµ²»ÒªÒ
             -ç³ö
 153   1        x2 = x % 10;
 154   1        x /= 10;
 155   1        if ( x2 >= 5 ) x ++;                                                       //ËÄÉáÎåÈë
 156   1      
 157   1        TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20£¬Timer1×÷Îª8Î»×Ô¶¯ÖØÔØ¶
             -¨Ê±Æ÷
 158   1        T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Ê±ÖÓÑ¡Ôñ
 159   1        TH1 = 0-x;                                                                 //12MHz¾§Õñ,buad/12ÎªÊµ¼ÊÐèÉèÖ
             -Ã²¨ÌØÂÊ
 160   1        TR1 = 1;                                                                   //Æô¶¯¶¨Ê±Æ÷1
 161   1        TI = 1;
 162   1        REN = 1;                                                                   //´®¿Ú0½ÓÊÕÊ¹ÄÜ
 163   1      }
 164          
 165          /*******************************************************************************
 166          * Function Name  : CH554UART0RcvByte()
 167          * Description    : CH554UART0½ÓÊÕÒ»¸ö×Ö½Ú
 168          * Input          : None
 169          * Output         : None
 170          * Return         : SBUF
 171          *******************************************************************************/
 172          UINT8  CH554UART0RcvByte( ) {
 173   1        while(RI == 0);                                                            //²éÑ¯½ÓÊÕ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃ
 174   1        RI = 0;
 175   1        return SBUF;
C51 COMPILER V9.56.0.0   DEBUG                                                             11/08/2019 19:46:07 PAGE 4   

 176   1      }
 177          
 178          /*******************************************************************************
 179          * Function Name  : CH554UART0SendByte(UINT8 SendDat)
 180          * Description    : CH554UART0·¢ËÍÒ»¸ö×Ö½Ú
 181          * Input          : UINT8 SendDat£»Òª·¢ËÍµÄÊý¾Ý
 182          * Output         : None
 183          * Return         : None
 184          *******************************************************************************/
 185          void CH554UART0SendByte(UINT8 SendDat) {
 186   1        SBUF = SendDat;                                                              //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂ
             -Ãæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
 187   1        while(TI ==0);
 188   1        TI = 0;
 189   1      }
 190          
 191          /*******************************************************************************
 192          * Function Name  : CH554WDTModeSelect(UINT8 mode)
 193          * Description    : CH554¿´ÃÅ¹·Ä£Ê½Ñ¡Ôñ
 194          * Input          : UINT8 mode
 195                             0  timer
 196                             1  watchDog
 197          * Output         : None
 198          * Return         : None
 199          *******************************************************************************/
 200          void CH554WDTModeSelect(UINT8 mode) {
 201   1        SAFE_MOD = 0x55;
 202   1        SAFE_MOD = 0xaa;                                                             //½øÈë°²È«Ä£Ê½
 203   1        if(mode) {
 204   2          GLOBAL_CFG |= bWDOG_EN;                                                    //Æô¶¯¿´ÃÅ¹·¸´Î»
 205   2        } else GLOBAL_CFG &= ~bWDOG_EN;                                           //Æô¶¯¿´ÃÅ¹·½ö½ö×÷Îª¶¨Ê±Æ÷
 206   1        SAFE_MOD = 0x00;                                                             //ÍË³ö°²È«Ä£Ê½
 207   1        WDOG_COUNT = 0;                                                              //¿´ÃÅ¹·¸³³õÖµ
 208   1      }
 209          
 210          /*******************************************************************************
 211          * Function Name  : CH554WDTFeed(UINT8 tim)
 212          * Description    : CH554¿´ÃÅ¹·¶¨Ê±Ê±¼äÉèÖÃ
 213          * Input          : UINT8 tim ¿´ÃÅ¹·¸´Î»Ê±¼äÉèÖÃ
 214                             00H(6MHz)=2.8s
 215                             80H(6MHz)=1.4s
 216          * Output         : None
 217          * Return         : None
 218          *******************************************************************************/
 219          void CH554WDTFeed(UINT8 tim) {
 220   1        WDOG_COUNT = tim;                                                             //¿´ÃÅ¹·¼ÆÊýÆ÷¸³Öµ
 221   1      }
 222          
 223          // /*******************************************************************************
 224          // * Function Name  : CH554SoftReset()
 225          // * Description    : CH554Èí¸´Î»
 226          // * Input          : None
 227          // * Output         : None
 228          // * Return         : None
 229          // *******************************************************************************/
 230          // void CH554SoftReset( )
 231          // {
 232          //     SAFE_MOD = 0x55;
 233          //     SAFE_MOD = 0xAA;
 234          //     GLOBAL_CFG |=bSW_RESET;
 235          // }
 236          
C51 COMPILER V9.56.0.0   DEBUG                                                             11/08/2019 19:46:07 PAGE 5   

 237          // /*******************************************************************************
 238          // * Function Name  : CH554USBDevWakeup()
 239          // * Description    : CH554Éè±¸Ä£Ê½»½ÐÑÖ÷»ú£¬·¢ËÍKÐÅºÅ
 240          // * Input          : None
 241          // * Output         : None
 242          // * Return         : None
 243          // *******************************************************************************/
 244          // void CH554USBDevWakeup( )
 245          // {
 246          //#ifdef Fullspeed
 247          //  UDEV_CTRL |= bUD_LOW_SPEED;
 248          //  mDelaymS(2);
 249          //  UDEV_CTRL &= ~bUD_LOW_SPEED;
 250          //#else
 251          //  UDEV_CTRL &= ~bUD_LOW_SPEED;
 252          //  mDelaymS(2);
 253          //  UDEV_CTRL |= bUD_LOW_SPEED;
 254          //#endif
 255          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    252    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
