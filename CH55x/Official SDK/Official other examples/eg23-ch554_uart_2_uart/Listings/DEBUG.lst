C51 COMPILER V9.53.0.0   DEBUG                                                             04/28/2018 17:12:39 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Objects\DEBUG.obj
COMPILER INVOKED BY: D:\Keil\Install\C51\BIN\C51.EXE Public\DEBUG.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Public) DEBU
                    -G OBJECTEXTEND PRINT(.\Listings\DEBUG.lst) OBJECT(.\Objects\DEBUG.obj)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : DEBUG.C
   3          * Author             : WCH
   4          * Version            : V1.0
   5          * Date               : 2017/01/20
   6          * Description        : CH554 DEBUG Interface
   7                               (1)¡¢´®¿Ú0Êä³ö´òÓ¡ÐÅÏ¢£¬²¨ÌØÂÊ¿É±ä;                                           
   8          *******************************************************************************/
   9          
  10          #include "CH554.H"
  11          #include "DEBUG.H"
  12          #include "stdio.h"
  13          /*******************************************************************************
  14          * Function Name  : CfgFsys( )
  15          * Description    : CH554Ê±ÖÓÑ¡ÔñºÍÅäÖÃº¯Êý,Ä¬ÈÏÊ¹ÓÃÄÚ²¿¾§Õñ12MHz£¬Èç¹û¶¨ÒåÁËFREQ_SYS¿ÉÒÔ
  16                             ¸ù¾ÝPLL_CFGºÍCLOCK_CFGÅäÖÃµÃµ½£¬¹«Ê½ÈçÏÂ£º
  17                             Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  18                             ¾ßÌåÊ±ÖÓÐèÒª×Ô¼ºÅäÖÃ
  19          * Input          : None
  20          * Output         : None
  21          * Return         : None
  22          *******************************************************************************/ 
  23          void    CfgFsys( )  
  24          {
  25   1      //              SAFE_MOD = 0x55;
  26   1      //              SAFE_MOD = 0xAA;
  27   1      //     CLOCK_CFG |= bOSC_EN_XT;                          //Ê¹ÄÜÍâ²¿¾§Õñ
  28   1      //     CLOCK_CFG &= ~bOSC_EN_INT;                        //¹Ø±ÕÄÚ²¿¾§Õñ    
  29   1                      SAFE_MOD = 0x55;
  30   1                      SAFE_MOD = 0xAA;
  31   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x07;  // 32MHz     
  32   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 24MHz     
  33   1                      CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 16MHz     
  34   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 12MHz
  35   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 6MHz      
  36   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz      
  37   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz    
  38   1      //              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5MHz          
  39   1                      SAFE_MOD = 0x00;
  40   1      }
  41          
  42          /*******************************************************************************
  43          * Function Name  : mDelayus(UNIT16 n)
  44          * Description    : usÑÓÊ±º¯Êý
  45          * Input          : UNIT16 n
  46          * Output         : None
  47          * Return         : None
  48          *******************************************************************************/ 
  49          void    mDelayuS( UINT16 n )  // ÒÔuSÎªµ¥Î»ÑÓÊ±
  50          {
  51   1      #ifdef  FREQ_SYS
  52   1      #if             FREQ_SYS <= 6000000
                              n >>= 2;
              #endif
C51 COMPILER V9.53.0.0   DEBUG                                                             04/28/2018 17:12:39 PAGE 2   

  55   1      #if             FREQ_SYS <= 3000000
                              n >>= 2;
              #endif
  58   1      #if             FREQ_SYS <= 750000
                              n >>= 4;
              #endif
  61   1      #endif
  62   1              while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  63   2                      ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  64   2      #ifdef  FREQ_SYS
  65   2      #if             FREQ_SYS >= 14000000
  66   2                      ++ SAFE_MOD;
  67   2      #endif
  68   2      #if             FREQ_SYS >= 16000000
  69   2                      ++ SAFE_MOD;
  70   2      #endif
  71   2      #if             FREQ_SYS >= 18000000
                              ++ SAFE_MOD;
              #endif
  74   2      #if             FREQ_SYS >= 20000000
                              ++ SAFE_MOD;
              #endif
  77   2      #if             FREQ_SYS >= 22000000
                              ++ SAFE_MOD;
              #endif
  80   2      #if             FREQ_SYS >= 24000000
                              ++ SAFE_MOD;
              #endif
  83   2      #if             FREQ_SYS >= 26000000
                              ++ SAFE_MOD;
              #endif
  86   2      #if             FREQ_SYS >= 28000000
                              ++ SAFE_MOD;
              #endif
  89   2      #if             FREQ_SYS >= 30000000
                              ++ SAFE_MOD;
              #endif
  92   2      #if             FREQ_SYS >= 32000000
                              ++ SAFE_MOD;
              #endif
  95   2      #endif
  96   2                      -- n;
  97   2              }
  98   1      }
  99          
 100          /*******************************************************************************
 101          * Function Name  : mDelayms(UNIT16 n)
 102          * Description    : msÑÓÊ±º¯Êý
 103          * Input          : UNIT16 n
 104          * Output         : None
 105          * Return         : None
 106          *******************************************************************************/
 107          void    mDelaymS( UINT16 n )                                                  // ÒÔmSÎªµ¥Î»ÑÓÊ±
 108          {
 109   1              while ( n ) {
 110   2      #ifdef  DELAY_MS_HW
                              while ( ( TKEY_CTRL & bTKC_IF ) == 0 );
                              while ( TKEY_CTRL & bTKC_IF );
              #else
 114   2                      mDelayuS( 1000 );
 115   2      #endif
 116   2                      -- n;
C51 COMPILER V9.53.0.0   DEBUG                                                             04/28/2018 17:12:39 PAGE 3   

 117   2              }
 118   1      }                                         
 119          
 120          /*******************************************************************************
 121          * Function Name  : CH554UART0Alter()
 122          * Description    : CH554´®¿Ú0Òý½ÅÓ³Éä,
 123          * Input          : None
 124          * Output         : None
 125          * Return         : None
 126          *******************************************************************************/
 127          void CH554UART0Alter()
 128          {
 129   1          PIN_FUNC |= bUART0_PIN_X;                                                  //´®¿ÚÓ³Éäµ½P1.2ºÍP1.3
 130   1      }
 131          
 132          /*******************************************************************************
 133          * Function Name  : mInitSTDIO()
 134          * Description    : CH554´®¿Ú0³õÊ¼»¯,Ä¬ÈÏÊ¹ÓÃT1×÷UART0µÄ²¨ÌØÂÊ·¢ÉúÆ÷,Ò²¿ÉÒÔÊ¹ÓÃT2
 135                             ×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷
 136          * Input          : None
 137          * Output         : None
 138          * Return         : None
 139          *******************************************************************************/
 140          void    mInitSTDIO( )
 141          {
 142   1          UINT32 x;
 143   1          UINT8 x2; 
 144   1      
 145   1          SM0 = 0;
 146   1          SM1 = 1;
 147   1          SM2 = 0;                                                                   //´®¿Ú0Ê¹ÓÃÄ£Ê½1
 148   1                                                                                     //Ê¹ÓÃTimer1×÷Îª²¨ÌØÂÊ·¢ÉúÆ
             -÷
 149   1          RCLK = 0;                                                                  //UART0½ÓÊÕÊ±ÖÓ
 150   1          TCLK = 0;                                                                  //UART0·¢ËÍÊ±ÖÓ
 151   1          PCON |= SMOD;
 152   1          x = 10 * FREQ_SYS / UART0_BUAD / 16;                                       //Èç¹û¸ü¸ÄÖ÷Æµ£¬×¢ÒâxµÄÖµ²»
             -ÒªÒç³ö                            
 153   1          x2 = x % 10;
 154   1          x /= 10;
 155   1          if ( x2 >= 5 ) x ++;                                                       //ËÄÉáÎåÈë
 156   1      
 157   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20£¬Timer1×÷Îª8Î»×Ô¶¯ÖØ
             -ÔØ¶¨Ê±Æ÷
 158   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Ê±ÖÓÑ¡Ôñ
 159   1          TH1 = 0-x;                                                                 //12MHz¾§Õñ,buad/12ÎªÊµ¼ÊÐè
             -ÉèÖÃ²¨ÌØÂÊ
 160   1          TR1 = 1;                                                                   //Æô¶¯¶¨Ê±Æ÷1
 161   1          REN = 1;                                                                   //´®¿Ú0½ÓÊÕÊ¹ÄÜ
 162   1              ES = 1;
 163   1              EA =1;
 164   1              
 165   1      }
 166          
 167          /*******************************************************************************
 168          * Function Name  : CH554UART0RcvByte()
 169          * Description    : CH554UART0½ÓÊÕÒ»¸ö×Ö½Ú
 170          * Input          : None
 171          * Output         : None
 172          * Return         : SBUF
 173          *******************************************************************************/
 174          UINT8  CH554UART0RcvByte( )
C51 COMPILER V9.53.0.0   DEBUG                                                             04/28/2018 17:12:39 PAGE 4   

 175          {
 176   1          while(RI == 0);                                                            //²éÑ¯½ÓÊÕ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃ
 177   1          RI = 0;
 178   1          return SBUF;
 179   1      }
 180          
 181          /*******************************************************************************
 182          * Function Name  : CH554UART0SendByte(UINT8 SendDat)
 183          * Description    : CH554UART0·¢ËÍÒ»¸ö×Ö½Ú
 184          * Input          : UINT8 SendDat£»Òª·¢ËÍµÄÊý¾Ý
 185          * Output         : None
 186          * Return         : None
 187          *******************************************************************************/
 188          void CH554UART0SendByte(UINT8 SendDat)
 189          {
 190   1              SBUF = SendDat;                                                              //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂ
             -Ãæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
 191   1              while(TI ==0);
 192   1              TI = 0;
 193   1      }
 194          void CH554UART0SendString(UINT8 *Str)
 195          {
 196   1              while(*Str!=0)
 197   1              {
 198   2                      CH554UART0SendByte(*Str++);
 199   2              }
 200   1      }
 201          /*******************************************************************************
 202          * Function Name  : UART1Setup()
 203          * Description    : CH554´®¿Ú1³õÊ¼»¯
 204          * Input          : None
 205          * Output         : None
 206          * Return         : None
 207          *******************************************************************************/
 208          void    UART1Setup( )
 209          {
 210   1        U1SM0 = 0;                                                                   //UART1Ñ¡Ôñ8Î»Êý¾ÝÎ»
 211   1        U1SMOD = 1;                                                                  //¿ìËÙÄ£Ê½
 212   1      //  U1REN = 1;                                                                   //Ê¹ÄÜ½ÓÊÕ
 213   1        SBAUD1 = 0 - FREQ_SYS/16/UART1_BUAD;
 214   1      //  IE_UART1 = 1;
 215   1              U1TI = 1;
 216   1      }
 217          
 218          /*******************************************************************************
 219          * Function Name  : CH554UART1RcvByte()
 220          * Description    : CH554UART1½ÓÊÕÒ»¸ö×Ö½Ú
 221          * Input          : None
 222          * Output         : None
 223          * Return         : SBUF
 224          *******************************************************************************/
 225          UINT8  CH554UART1RcvByte( )
 226          {
 227   1          while(U1RI == 0);                                                           //²éÑ¯½ÓÊÕ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃ
 228   1          U1RI = 0;
 229   1          return SBUF1;
 230   1      }
 231          
 232          /*******************************************************************************
 233          * Function Name  : CH554UART1SendByte(UINT8 SendDat)
 234          * Description    : CH554UART1·¢ËÍÒ»¸ö×Ö½Ú
 235          * Input          : UINT8 SendDat£»Òª·¢ËÍµÄÊý¾Ý
C51 COMPILER V9.53.0.0   DEBUG                                                             04/28/2018 17:12:39 PAGE 5   

 236          * Output         : None
 237          * Return         : None
 238          *******************************************************************************/
 239          void CH554UART1SendByte(UINT8 SendDat)
 240          {
 241   1              SBUF1 = SendDat;                                                             //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂ
             -Ãæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
 242   1              while(U1TI ==0);
 243   1              U1TI = 0;
 244   1      }
 245          
 246          char putchar (char a)
 247          {
 248   1              while(U1TI == 0);
 249   1              U1TI = 0;
 250   1              SBUF1 = a; 
 251   1              return a;
 252   1      }
 253          /*******************************************************************************
 254          * Function Name  : CH554WatchDog(UINT8 mode)
 255          * Description    : CH554¿´ÃÅ¹·Ä£Ê½ÉèÖÃ
 256          * Input          : UINT8 mode 
 257                             0  timer
 258                             1  watchDog
 259          * Output         : None
 260          * Return         : None
 261          *******************************************************************************/
 262          void CH554WatchDog(UINT8 mode)
 263          {
 264   1        SAFE_MOD = 0x55;
 265   1        SAFE_MOD = 0xaa;                                                             //½øÈë°²È«Ä£Ê½
 266   1        if(mode){
 267   2          GLOBAL_CFG |= bWDOG_EN;
 268   2        }
 269   1        else GLOBAL_CFG &= ~bWDOG_EN; 
 270   1        SAFE_MOD = 0x00;                                                             //ÍË³ö°²È«Ä£Ê½
 271   1        WDOG_COUNT = 0;                                                              //¿´ÃÅ¹·¸³³õÖµ
 272   1      }
 273          
 274          /*******************************************************************************
 275          * Function Name  : CH554WatchDogFeed(UINT8 tim)
 276          * Description    : CH554¿´ÃÅ¹·Î¹¹·
 277          * Input          : UINT8 tim ¿´ÃÅ¹·¸´Î»Ê±¼äÉèÖÃ
 278                             00H(6MHz)=2.8s
 279                             80H(6MHz)=1.4s
 280          * Output         : None
 281          * Return         : None
 282          *******************************************************************************/
 283          void CH554WatchDogFeed(UINT8 tim)
 284          {
 285   1        WDOG_COUNT = tim;                                                             //¿´ÃÅ¹·¸³³õÖµ  
 286   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.53.0.0   DEBUG                                                             04/28/2018 17:12:39 PAGE 6   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
