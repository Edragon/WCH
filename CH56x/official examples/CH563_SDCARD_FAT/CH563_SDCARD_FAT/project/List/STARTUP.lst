


ARM Macro Assembler    Page 1 


    1 00000000         ; CH56x ARM START CODE
    2 00000000         ; V1.01 2011.10
    3 00000000         ;
    4 00000000         
    5 00000000         ; configuration
    6 00000000 00000001 
                       SWI_USE_ASM
                               EQU              1           ;ASM code for Softw
                                                            areInterrupt
    7 00000000 00000000 
                       IRQ_USE_ASM
                               EQU              0           ;ASM code for IRQ_H
                                                            andler
    8 00000000 00000000 
                       FIQ_USE_ASM
                               EQU              0           ;ASM code for FIQ_H
                                                            andler
    9 00000000 00000042 
                       RESERVED_VECTOR
                               EQU              0x00000042  ;reserved vector
   10 00000000         ;                                      if bit31:30=0:1, 
                       then
   11 00000000         ;                                        bit29=0 for 32K
                       -CODE-RAM, bit29=1 for 64K/96K-CODE-RAM, default is 1
   12 00000000         ;                                        bit28=0 for dis
                       able ICE/debug, bit28=1 for enable ICE/debug, default is
                        0
   13 00000000         ;                                      if bit23:16=0xFF,
                        then enable code ROM reading by external master, else d
                       isable
   14 00000000         ;
   15 00000000         ; define stack size
   16 00000000 00000000 
                       UND_STACK_SIZE
                               EQU              0x00000000  ;stack size for Und
                                                            efineInstruction
   17 00000000 00000000 
                       ABT_STACK_SIZE
                               EQU              0x00000000  ;stack size for Pre
                                                            fetchAbort/DataAbor
                                                            t
   18 00000000 00000010 
                       SVC_STACK_SIZE
                               EQU              0x00000010  ;stack size for Sof
                                                            twareInterrupt
   19 00000000 00000100 
                       IRQ_STACK_SIZE
                               EQU              0x00000100  ;stack size for IRQ
                                                            _Handler
   20 00000000 00000100 
                       FIQ_STACK_SIZE
                               EQU              0x00000100  ;stack size for FIQ
                                                            _Handler
   21 00000000 00000400 
                       SYS_STACK_SIZE
                               EQU              0x00000400  ;stack size for sys
                                                            tem/user
   22 00000000 00000610 
                       ALL_STACK_SIZE



ARM Macro Assembler    Page 2 


                               EQU              (UND_STACK_SIZE+ABT_STACK_SIZE+
SVC_STACK_SIZE+IRQ_STACK_SIZE+FIQ_STACK_SIZE+SYS_STACK_SIZE)
   23 00000000 00000000 
                       HEAP_SIZE
                               EQU              0x00000000  ;heap size
   24 00000000         ;
   25 00000000         ;*******************************************************
                       ********************************************
   26 00000000         ;
   27 00000000                 PRESERVE8
   28 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   29 00000000         Stack_Top
                               SPACE            0x400
   30 00000400 0081FC00 
                       __initial_sp
                               EQU              0x81FC00    ; equal to the star
                                                            t of the stack
   31 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   32 00000000         __heap_base                          ; equal to the star
                                                            t of the heap   
   33 00000000         Heap_Bottom
                               SPACE            HEAP_SIZE
   34 00000000 0081FC00 
                       __heap_limit
                               EQU              0x81FC00,DATA ; equal to the en
                                                            d of the heap
   35 00000000         
   36 00000000         ;
   37 00000000         ;*******************************************************
                       ********************************************
   38 00000000         ;
   39 00000000                 EXPORT           Reset
   40 00000000                 EXPORT           __rt_div0
   41 00000000         ;
   42 00000000                 AREA             RESET,CODE,READONLY
   43 00000000                 ENTRY
   44 00000000                 CODE32
   45 00000000         ;
   46 00000000         Reset
   47 00000000 EA00000B        B                ResetInit
   48 00000004 EA000005        B                UndefineInstruction
   49 00000008                 IF               SWI_USE_ASM = 0
   51                          ENDIF
   52 00000008 EA000007        B                SoftwareInterrupt
   53 0000000C EA000004        B                PrefetchAbort
   54 00000010 EA000004        B                DataAbort
   55 00000014 00000042        DCD              RESERVED_VECTOR
   56 00000018                 IF               IRQ_USE_ASM = 0
   57 00000018                 IMPORT           IRQ_Handler
   58 00000018                 ENDIF
   59 00000018 EAFFFFFE        B                IRQ_Handler
   60 0000001C                 IF               FIQ_USE_ASM = 0
   61 0000001C                 IMPORT           FIQ_Handler
   62 0000001C EAFFFFFE        B                FIQ_Handler
   63 00000020                 ELSE
   74                          ENDIF
   75 00000020         ;



ARM Macro Assembler    Page 3 


   76 00000020         UndefineInstruction
   77 00000020         ;                STMFD   SP!, {R0-R12, LR}
   78 00000020         ;;                MRS     R1, SPSR
   79 00000020         ;;                STMFD   SP!, {R1}
   80 00000020         ;                BL      UndefineInstrHand
   81 00000020         ;;                LDMFD   SP!, {R1}
   82 00000020         ;;                MSR     SPSR_CXSF, R1
   83 00000020         ;                LDMFD   SP!, {R0-R12, PC}^
   84 00000020 EAFFFFFE        B                UndefineInstruction
   85 00000024         ;
   86 00000024         PrefetchAbort
   87 00000024         ;                SUB     LR, LR, #4
   88 00000024         ;                STMFD   SP!, {R0-R12, LR}
   89 00000024         ;;                MRS     R1, SPSR
   90 00000024         ;;                STMFD   SP!, {R1}
   91 00000024         ;                BL      PrefetchAbortHand
   92 00000024         ;;                LDMFD   SP!, {R1}
   93 00000024         ;;                MSR     SPSR_CXSF, R1
   94 00000024         ;                LDMFD   SP!, {R0-R12, PC}^
   95 00000024 EAFFFFFE        B                PrefetchAbort
   96 00000028         ;
   97 00000028         DataAbort
   98 00000028         ;                SUB     LR, LR, #8
   99 00000028         ;                STMFD   SP!, {R0-R12, LR}
  100 00000028         ;;                MRS     R1, SPSR
  101 00000028         ;;                STMFD   SP!, {R1}
  102 00000028         ;                BL      DataAbortHand
  103 00000028         ;;                LDMFD   SP!, {R1}
  104 00000028         ;;                MSR     SPSR_CXSF, R1
  105 00000028         ;                LDMFD   SP!, {R0-R12, PC}^
  106 00000028 EAFFFFFE        B                DataAbort
  107 0000002C         ;
  108 0000002C                 IF               SWI_USE_ASM <> 0
  109 0000002C         SoftwareInterrupt
  110 0000002C         ;                STMFD   SP!, {R0-R12, LR}
  111 0000002C         ;;                MRS     R1, SPSR
  112 0000002C         ;;                STMFD   SP!, {R1}
  113 0000002C         ;                BL      SoftwareInt
  114 0000002C         ;;                LDMFD   SP!, {R1}
  115 0000002C         ;;                MSR     SPSR_CXSF, R1
  116 0000002C         ;                LDMFD   SP!, {R0-R12, PC}^
  117 0000002C EAFFFFFE        B                SoftwareInterrupt
  118 00000030                 ENDIF
  119 00000030         ;
  120 00000030                 IF               IRQ_USE_ASM <> 0
  130                          ENDIF
  131 00000030         ;
  132 00000030         ;*******************************************************
                       ********************************************
  133 00000030                 IF               :DEF:__MICROLIB 
                                                            ; use microlib   
  134 00000030         
  135 00000030                 EXPORT           __initial_sp
  136 00000030                 EXPORT           __heap_base
  137 00000030                 EXPORT           __heap_limit
  138 00000030         
  139 00000030                 ELSE
  150                          ENDIF
  151 00000030         ;*******************************************************



ARM Macro Assembler    Page 4 


                       ********************************************
  152 00000030         __rt_div0
  153 00000030 EAFFFFFE        B                __rt_div0
  154 00000034         ;*******************************************************
                       ********************************************
  155 00000034         ResetInit
  156 00000034 E59F0050        LDR              R0, =Stack_Top
  157 00000038 E321F0DB        MSR              CPSR_c, #0xDB
  158 0000003C E1A0D000        MOV              SP, R0
  159 00000040 E2400000        SUB              R0, R0, #UND_STACK_SIZE
  160 00000044 E321F0D7        MSR              CPSR_c, #0xD7
  161 00000048 E1A0D000        MOV              SP, R0
  162 0000004C E2400000        SUB              R0, R0, #ABT_STACK_SIZE
  163 00000050 E321F0D3        MSR              CPSR_c, #0xD3
  164 00000054 E1A0D000        MOV              SP, R0
  165 00000058 E2400010        SUB              R0, R0, #SVC_STACK_SIZE
  166 0000005C E321F0D2        MSR              CPSR_c, #0xD2
  167 00000060 E1A0D000        MOV              SP, R0
  168 00000064 E2400C01        SUB              R0, R0, #IRQ_STACK_SIZE
  169 00000068 E321F0D1        MSR              CPSR_c, #0xD1
  170 0000006C E1A0D000        MOV              SP, R0
  171 00000070 E2400C01        SUB              R0, R0, #FIQ_STACK_SIZE
  172 00000074         ;                MSR     CPSR_c, #0xDF
  173 00000074 E321F01F        MSR              CPSR_c, #0x1F
  174 00000078 E1A0D000        MOV              SP, R0
  175 0000007C E24DAB01        SUB              SL, SP, #SYS_STACK_SIZE
  176 00000080                 IMPORT           SysFreq
  177 00000080 FAFFFFFE        BLX              SysFreq
  178 00000084                 IMPORT           __main
  179 00000084 FAFFFFFE        BLX              __main
  180 00000088         MainExit
  181 00000088 EAFFFFFE        B                MainExit
  182 0000008C         ;*******************************************************
                       ********************************************
  183 0000008C                 END
              00000000 
Command Line: --debug --xref --cpu=ARM966E-S --apcs=interwork --depend=.\obj\st
artup.d -o.\obj\startup.o -IF:\keilarm\ARM\RV31\INC -IF:\keilarm\ARM\CMSIS\Incl
ude -IF:\keilarm\ARM\Inc\ST\91x --predefine="__MICROLIB SETA 1" --list=.\list\s
tartup.lst ..\SRC\STARTUP.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 28 in file ..\SRC\STARTUP.S
   Uses
      None
Comment: STACK unused
Stack_Top 00000000

Symbol: Stack_Top
   Definitions
      At line 29 in file ..\SRC\STARTUP.S
   Uses
      At line 156 in file ..\SRC\STARTUP.S
Comment: Stack_Top used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 31 in file ..\SRC\STARTUP.S
   Uses
      None
Comment: HEAP unused
Heap_Bottom 00000000

Symbol: Heap_Bottom
   Definitions
      At line 33 in file ..\SRC\STARTUP.S
   Uses
      None
Comment: Heap_Bottom unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 32 in file ..\SRC\STARTUP.S
   Uses
      At line 136 in file ..\SRC\STARTUP.S
Comment: __heap_base used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DataAbort 00000028

Symbol: DataAbort
   Definitions
      At line 97 in file ..\SRC\STARTUP.S
   Uses
      At line 54 in file ..\SRC\STARTUP.S
      At line 106 in file ..\SRC\STARTUP.S

MainExit 00000088

Symbol: MainExit
   Definitions
      At line 180 in file ..\SRC\STARTUP.S
   Uses
      At line 181 in file ..\SRC\STARTUP.S
Comment: MainExit used once
PrefetchAbort 00000024

Symbol: PrefetchAbort
   Definitions
      At line 86 in file ..\SRC\STARTUP.S
   Uses
      At line 53 in file ..\SRC\STARTUP.S
      At line 95 in file ..\SRC\STARTUP.S

RESET 00000000

Symbol: RESET
   Definitions
      At line 42 in file ..\SRC\STARTUP.S
   Uses
      None
Comment: RESET unused
Reset 00000000

Symbol: Reset
   Definitions
      At line 46 in file ..\SRC\STARTUP.S
   Uses
      At line 39 in file ..\SRC\STARTUP.S
Comment: Reset used once
ResetInit 00000034

Symbol: ResetInit
   Definitions
      At line 155 in file ..\SRC\STARTUP.S
   Uses
      At line 47 in file ..\SRC\STARTUP.S
Comment: ResetInit used once
SoftwareInterrupt 0000002C

Symbol: SoftwareInterrupt
   Definitions
      At line 109 in file ..\SRC\STARTUP.S
   Uses
      At line 52 in file ..\SRC\STARTUP.S
      At line 117 in file ..\SRC\STARTUP.S




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

UndefineInstruction 00000020

Symbol: UndefineInstruction
   Definitions
      At line 76 in file ..\SRC\STARTUP.S
   Uses
      At line 48 in file ..\SRC\STARTUP.S
      At line 84 in file ..\SRC\STARTUP.S

__rt_div0 00000030

Symbol: __rt_div0
   Definitions
      At line 152 in file ..\SRC\STARTUP.S
   Uses
      At line 40 in file ..\SRC\STARTUP.S
      At line 153 in file ..\SRC\STARTUP.S

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_STACK_SIZE 00000000

Symbol: ABT_STACK_SIZE
   Definitions
      At line 17 in file ..\SRC\STARTUP.S
   Uses
      At line 22 in file ..\SRC\STARTUP.S
      At line 162 in file ..\SRC\STARTUP.S

ALL_STACK_SIZE 00000610

Symbol: ALL_STACK_SIZE
   Definitions
      At line 22 in file ..\SRC\STARTUP.S
   Uses
      None
Comment: ALL_STACK_SIZE unused
FIQ_STACK_SIZE 00000100

Symbol: FIQ_STACK_SIZE
   Definitions
      At line 20 in file ..\SRC\STARTUP.S
   Uses
      At line 22 in file ..\SRC\STARTUP.S
      At line 171 in file ..\SRC\STARTUP.S

FIQ_USE_ASM 00000000

Symbol: FIQ_USE_ASM
   Definitions
      At line 8 in file ..\SRC\STARTUP.S
   Uses
      At line 60 in file ..\SRC\STARTUP.S
Comment: FIQ_USE_ASM used once
HEAP_SIZE 00000000

Symbol: HEAP_SIZE
   Definitions
      At line 23 in file ..\SRC\STARTUP.S
   Uses
      At line 33 in file ..\SRC\STARTUP.S
Comment: HEAP_SIZE used once
IRQ_STACK_SIZE 00000100

Symbol: IRQ_STACK_SIZE
   Definitions
      At line 19 in file ..\SRC\STARTUP.S
   Uses
      At line 22 in file ..\SRC\STARTUP.S
      At line 168 in file ..\SRC\STARTUP.S

IRQ_USE_ASM 00000000

Symbol: IRQ_USE_ASM
   Definitions
      At line 7 in file ..\SRC\STARTUP.S
   Uses
      At line 56 in file ..\SRC\STARTUP.S
      At line 120 in file ..\SRC\STARTUP.S



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


RESERVED_VECTOR 00000042

Symbol: RESERVED_VECTOR
   Definitions
      At line 9 in file ..\SRC\STARTUP.S
   Uses
      At line 55 in file ..\SRC\STARTUP.S
Comment: RESERVED_VECTOR used once
SVC_STACK_SIZE 00000010

Symbol: SVC_STACK_SIZE
   Definitions
      At line 18 in file ..\SRC\STARTUP.S
   Uses
      At line 22 in file ..\SRC\STARTUP.S
      At line 165 in file ..\SRC\STARTUP.S

SWI_USE_ASM 00000001

Symbol: SWI_USE_ASM
   Definitions
      At line 6 in file ..\SRC\STARTUP.S
   Uses
      At line 49 in file ..\SRC\STARTUP.S
      At line 108 in file ..\SRC\STARTUP.S

SYS_STACK_SIZE 00000400

Symbol: SYS_STACK_SIZE
   Definitions
      At line 21 in file ..\SRC\STARTUP.S
   Uses
      At line 22 in file ..\SRC\STARTUP.S
      At line 175 in file ..\SRC\STARTUP.S

UND_STACK_SIZE 00000000

Symbol: UND_STACK_SIZE
   Definitions
      At line 16 in file ..\SRC\STARTUP.S
   Uses
      At line 22 in file ..\SRC\STARTUP.S
      At line 159 in file ..\SRC\STARTUP.S

__heap_limit 0081FC00

Symbol: __heap_limit
   Definitions
      At line 34 in file ..\SRC\STARTUP.S
   Uses
      At line 137 in file ..\SRC\STARTUP.S
Comment: __heap_limit used once
__initial_sp 0081FC00

Symbol: __initial_sp
   Definitions
      At line 30 in file ..\SRC\STARTUP.S
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 135 in file ..\SRC\STARTUP.S
Comment: __initial_sp used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

FIQ_Handler 00000000

Symbol: FIQ_Handler
   Definitions
      At line 61 in file ..\SRC\STARTUP.S
   Uses
      At line 62 in file ..\SRC\STARTUP.S
Comment: FIQ_Handler used once
IRQ_Handler 00000000

Symbol: IRQ_Handler
   Definitions
      At line 57 in file ..\SRC\STARTUP.S
   Uses
      At line 59 in file ..\SRC\STARTUP.S
Comment: IRQ_Handler used once
SysFreq 00000000

Symbol: SysFreq
   Definitions
      At line 176 in file ..\SRC\STARTUP.S
   Uses
      At line 177 in file ..\SRC\STARTUP.S
Comment: SysFreq used once
__main 00000000

Symbol: __main
   Definitions
      At line 178 in file ..\SRC\STARTUP.S
   Uses
      At line 179 in file ..\SRC\STARTUP.S
Comment: __main used once
4 symbols
365 symbols in table
