C51 COMPILER V9.56.0.0   GPIO                                                              04/09/2018 00:44:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE GPIO\GPIO.C LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\GPIO.lst) TABS(2) OBJECT(GPIO.obj)

line level    source

   1          
   2          /********************************** (C) COPYRIGHT *******************************
   3          * File Name          : GPIO.C
   4          * Author             : WCH
   5          * Version            : V1.3
   6          * Date               : 2016/6/24
   7          * Description        : CH559µÄGPIO²Ù×÷£¬Ê¹ÓÃÊ±¿ÉÒÔ¼òµ¥²Ù×÷£¬Ö±½ÓÅäÖÃ
   8                                 IOÅäÖÃÖ÷Òª¸úÒ»ÏÂ¼Ä´æÆ÷µÄ×´Ì¬ÓÐ¹ØÏµ
   9                                 bPn_OC & Pn_DIR & Pn_PU: pin input & output configuration for Pn (n=0/1/2/3)
  10                                 ÏêÏ¸½éÉÜÇë¿´CH559.HµÄ 457ÐÐ
  11          *******************************************************************************/
  12          #include "..\DEBUG.C"                                                          //µ÷ÊÔÐÅÏ¢´òÓ¡
  13          #include "..\DEBUG.H"
  14          
  15          #pragma  NOAREGS
  16          
  17          
  18          sbit  LED=P1^4;
  19          
  20          /*******************************************************************************
  21          * Function Name  : CH559GPIODrivCap(UINT8 Port,UINT8 Cap)
  22          * Description    : ¶Ë¿Ú0¡¢1¡¢2¡¢3Çý¶¯ÄÜÁ¦ÉèÖÃ
  23          * Input          : UINT8 Port¶Ë¿ÚÑ¡Ôñ(0¡¢1¡¢2¡¢3)
  24                             UINT8 CapÇý¶¯ÄÜÁ¦Ñ¡Ôñ((0)5mA¡¢(1)20mA(×¢Òâ:P1¿ÚÊÇ10mA))
  25          * Output         : None
  26          * Return         : SUCCESS³É¹¦
  27                             FAILÊ§°Ü
  28          *******************************************************************************/
  29          UINT8 CH559GPIODrivCap(UINT8 Port,UINT8 Cap)
  30          {
  31   1        if(Port >= 4){
  32   2          return FAIL;
  33   2        }
  34   1        if(Cap == 0){                                                               //Çý¶¯µçÁ÷×î´ó5mA
  35   2          PORT_CFG &= ~(bP0_DRV << Port);
  36   2        }
  37   1        else{   
  38   2          PORT_CFG |= (bP0_DRV << Port);                                             //Çý¶¯µçÁ÷×î´ó20mA
  39   2        }
  40   1        return SUCCESS;
  41   1      }
  42          
  43          /*******************************************************************************
  44          * Function Name  : CH559GPIOModeSelt(UINT8 Port,UINT8 Mode,UINT8 PinNum)
  45          * Description    : ¶Ë¿Ú0¡¢1¡¢2¡¢3Òý½ÅÄ£Ê½ÉèÖÃ
  46          * Input          : UINT8 Port¶Ë¿ÚÑ¡Ôñ(0¡¢1¡¢2¡¢3)
  47                             UINT8 CapÇý¶¯·½Ê½Ñ¡Ôñ(bPn_OC & Pn_DIR & Pn_PU)
  48                             0(000)£º½öÊäÈë£¬ÎÞÉÏÀ­£»
  49                             1(001)£º½öÊäÈë£¬´øÉÏÀ­£»
  50                             2(01x)£ºÍÆÍìÊä³ö£¬¸ßµÍµçÆ½Ç¿Çý¶¯£»
  51                             3(100)£º¿ªÂ©Êä³ö£¬ÎÞÉÏÀ­£¬Ö§³ÖÊäÈë£»
  52                             4(110)£º¿ªÂ©Êä³ö£¬ÎÞÉÏÀ­,µ±×ª±äÊä³öÓÉµÍµ½¸ßÊ±£¬½öÇý¶¯2¸öÊ±ÖÓµÄ¸ßµçÆ½
  53                             5(101)£º×¼Ë«Ïò(±ê×¼51Ä£Ê½)£¬¿ªÂ©Êä³ö£¬´øÉÏÀ­
  54                             6(111)£º×¼Ë«Ïò(±ê×¼51Ä£Ê½)£¬¿ªÂ©Êä³ö£¬´øÉÏÀ­£¬µ±×ª±äÊä³öÓÉµÍµ½¸ßÊ±£¬½öÇý¶¯2¸öÊ±ÖÓµÄ¸ßµç
C51 COMPILER V9.56.0.0   GPIO                                                              04/09/2018 00:44:10 PAGE 2   

             -Æ½
  55                             UINT8 PinNum(Òý½ÅÑ¡Ôñ0-7)
  56          * Output         : None
  57          * Return         : SUCCESS³É¹¦
  58                             FAILÊ§°Ü
  59          *******************************************************************************/
  60          UINT8 CH559GPIOModeSelt(UINT8 Port,UINT8 Mode,UINT8 PinNum)
  61          {
  62   1        UINT8 Pn_DIR,Pn_PU;
  63   1        if(Port >= 4){
  64   2          return FAIL;
  65   2        }
  66   1      
  67   1        switch (Mode){
  68   2            case 0:                                                                //½öÊäÈë£¬ÎÞÉÏÀ­
  69   2              PORT_CFG &= ~(bP0_OC << Port);
  70   2              Pn_DIR &= ~(1<<PinNum);
  71   2              Pn_PU &= ~(1<<PinNum);
  72   2              break;
  73   2            case 1:                                                                //½öÊäÈë£¬´øÉÏÀ­
  74   2              PORT_CFG &= ~(bP0_OC << Port);
  75   2              Pn_DIR &= ~(1<<PinNum);
  76   2              Pn_PU |= 1<<PinNum;
  77   2              break;
  78   2            case 2:                                                                //ÍÆÍìÊä³ö£¬¸ßµÍµçÆ½Ç¿Çý¶¯
  79   2              PORT_CFG &= ~(bP0_OC << Port);
  80   2              Pn_DIR |= ~(1<<PinNum);
  81   2              break;
  82   2            case 3:                                                                //¿ªÂ©Êä³ö£¬ÎÞÉÏÀ­£¬Ö§³ÖÊäÈë
  83   2              PORT_CFG |= (bP0_OC << Port);
  84   2              Pn_DIR &= ~(1<<PinNum);
  85   2              Pn_PU &= ~(1<<PinNum);
  86   2              break;
  87   2            case 4:                                                                //¿ªÂ©Êä³ö£¬ÎÞÉÏÀ­,µ±×ª±äÊä³öÓ
             -ÉµÍµ½¸ßÊ±£¬½öÇý¶¯2¸öÊ±ÖÓµÄ¸ßµçÆ½
  88   2              PORT_CFG |= (bP0_OC << Port);
  89   2              Pn_DIR |= 1<<PinNum;
  90   2              Pn_PU &= ~(1<<PinNum);
  91   2              break;
  92   2            case 5:                                                                //Èõ×¼Ë«Ïò(±ê×¼51Ä£Ê½)£¬¿ªÂ©Êä
             -³ö£¬´øÉÏÀ­
  93   2              PORT_CFG |= (bP0_OC << Port);
  94   2              Pn_DIR &= ~(1<<PinNum);
  95   2              Pn_PU |= 1<<PinNum;
  96   2              break;
  97   2            case 6:                                                                //×¼Ë«Ïò(±ê×¼51Ä£Ê½)£¬¿ªÂ©Êä³ö
             -£¬´øÉÏÀ­£¬µ±×ª±äÊä³öÓÉµÍµ½¸ßÊ±£¬½öÇý¶¯2¸öÊ±ÖÓµÄ¸ßµçÆ½
  98   2              PORT_CFG |= (bP0_OC << Port);
  99   2              Pn_DIR |= 1<<PinNum;
 100   2              Pn_PU |= 1<<PinNum;
 101   2              break;
 102   2            default:
 103   2              break;
 104   2        }
 105   1        if(Port == 0){
 106   2          P0_DIR = Pn_DIR;
 107   2          P0_PU = Pn_PU;
 108   2        }
 109   1        if(Port == 1){
 110   2          P1_DIR = Pn_DIR;
 111   2          P1_PU = Pn_PU;
 112   2        }
C51 COMPILER V9.56.0.0   GPIO                                                              04/09/2018 00:44:10 PAGE 3   

 113   1        if(Port == 2){
 114   2          P2_DIR = Pn_DIR;
 115   2          P2_PU = Pn_PU;
 116   2        }
 117   1        if(Port == 3){
 118   2          P3_DIR = Pn_DIR;
 119   2          P3_PU = Pn_PU;
 120   2        }
 121   1        return SUCCESS;
 122   1      }
 123          
 124          /*******************************************************************************
 125          * Function Name  : CH559P4Mode()
 126          * Description    : CH559µÄP4¶Ë¿Ú³õÊ¼»¯£¬P4Ä¬ÈÏÊÇÊäÈë¿Ú
 127          * Input          : None
 128          * Output         : None
 129          * Return         : None
 130          *******************************************************************************/
 131          void CH559P4Mode( )
 132          {
 133   1        P4_DIR |= 0xff;                                                            //ÖÃ1ÉèÖÃÎªÊä³ö
 134   1        P4_PU |= 0xff;                                                             //Æô¶¯p4¿ÚÄÚ²¿ÉÏÀ­
 135   1        P4_CFG |= bP4_DRV;                                                         //¸ÃÎ»Îª0ÔòP4¿ÚÇý¶¯ÄÜÁ¦5mA,Îª1
             -Ê±Îª20mA
 136   1      }
 137          
 138          /*******************************************************************************
 139          * Function Name  : CH559GPIOInterruptInit()
 140          * Description    : CH559GPIOÖÐ¶Ï³õÊ¼»¯£¬ÆäËûÒý½ÅÈçP5.5\P1.4\P0.3\P5.7\P4.1\RXD0ÉèÖÃÍ¬Àí
 141          * Input          : None
 142          * Output         : None
 143          * Return         : None
 144          *******************************************************************************/
 145          void CH559GPIOInterruptInit()
 146          {                                                      
 147   1        GPIO_IE &= ~bIE_IO_EDGE;                                                   //ÖÐ¶Ï·½Ê½Ñ¡Ôñ£¬¸ÃÎ»Îª0Ôò±íÊ¾I
             -O¿ÚµçÆ½ÖÐ¶Ï£¬¸ÃÎ»Îª1Ôò±íÊ¾IO¿Ú±ßÑØÖÐ¶Ï
 148   1        GPIO_IE |= bIE_RXD1_LO;                                                    //Ê¹ÄÜRXD1Òý½ÅµÄÖÐ¶Ï,ÆäËûÒý½ÅÖ
             -Ð¶ÏÉèÖÃÍ¬Àí
 149   1      }
 150          
 151          /*******************************************************************************
 152          * Function Name  : GPIOInterrupt(void)
 153          * Description    : GPIO ÖÐ¶Ï·þÎñ³ÌÐò
 154          * Input          : None
 155          * Output         : None
 156          * Return         : None   
 157          *******************************************************************************/
 158          void  GPIOInterrupt( void ) interrupt INT_NO_GPIO using 1                    //GPIOÖÐ¶Ï·þÎñ³ÌÐò,Ê¹ÓÃ¼Ä´æÆ÷×
             -é1
 159          {  
 160   1          //RXD1_ = 1;
 161   1          printf("P5_IN %02X\n",(UINT16)P5_IN);                                     //bIO_INT_ACTÎªGPIOÖÐ¶Ï×´Ì¬Î
             -»
 162   1          //IE_GPIO = 0;                                                            //Ê¹ÄÜGPIOÖÐ¶Ï
 163   1      }
 164          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    639    ----
   CONSTANT SIZE    =     12    ----
C51 COMPILER V9.56.0.0   GPIO                                                              04/09/2018 00:44:10 PAGE 4   

   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
