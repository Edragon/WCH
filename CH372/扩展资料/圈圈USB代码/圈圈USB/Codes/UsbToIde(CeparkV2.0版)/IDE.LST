C51 COMPILER V7.06   IDE                                                                   04/13/2009 14:27:04 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE IDE
OBJECT MODULE PLACED IN IDE.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE IDE.C BROWSE DEBUG OBJECTEXTEND TABS(1)

stmt level    source

   1          /******************************************************************
   2             本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3             
   4                  欢迎访问我的USB专区：http://group.ednchina.com/93/
   5                  欢迎访问我的blog：   http://www.ednchina.com/blog/computer00
   6                                       http://computer00.21ic.org
   7          
   8                  感谢PCB赞助商――电子园： http://bbs.cepark.com/
   9          
  10          IDE.c file
  11          
  12          作者：电脑圈圈
  13          建立日期: 2008.08.21
  14          修改日期: 2008.08.21
  15          版本：V1.1
  16          版权所有，盗版必究。
  17          Copyright(C) 电脑圈圈 2008-2018
  18          All rights reserved            
  19          *******************************************************************/
  20          
  21          #include <at89X52.h>
  22          #include "MyType.h"
  23          #include "IDE.H"
  24          #include "UsbCore.h"
  25          #include "SCSI.h"
  26          
  27          /********************************************************************
  28          函数功能：设置IDE地址的函数。其实是将P1口数据通过573锁存输出。
  29          入口参数：Address: 要锁存的数据。
  30          返    回：无。
  31          备    注：请参看原理图，P1口通过573锁存后所连接的引脚。
  32          ********************************************************************/
  33          void IdeSetAddress(uint8 Address)
  34          {
  35   1       uint8 i;
  36   1       IDE_DATA_L=0xFF; //设置为高电平
  37   1       IDE_DATA_H=0xFF;
  38   1       i=5;
  39   1       while(--i); //IO口上拉能力弱，延时等待电平稳定
  40   1       IDE_ADDRESS=Address; //设置地址（通过573锁存）
  41   1       IDE_ALE=1;  //将P1口数据锁存到573中
  42   1       IDE_ALE=0;
  43   1       //由于学习板上IO口未接上拉电阻，仅使用内部上拉电阻，
  44   1       //所以驱动能力较弱，需要驱动较长的IDE数据线，因而
  45   1       //高电平的建立时间较长，所以需要事先设置高电平状态
  46   1       IDE_DATA_L=0xFF;
  47   1       IDE_DATA_H=0xFF;
  48   1      }
  49          ////////////////////////End of function//////////////////////////////
  50          
  51          /********************************************************************
  52          函数功能：IDE硬盘复位函数。
  53          入口参数：无。
  54          返    回：无。
  55          备    注：调用此函数对硬盘复位，进入默认状态。
C51 COMPILER V7.06   IDE                                                                   04/13/2009 14:27:04 PAGE 2   

  56          ********************************************************************/
  57          void IdeReset(void)
  58          {
  59   1       IdeSetAddress(IDE_RESET);  //设置复位，即RESET脚置低
  60   1       DelayXms(200);             //延时等待
  61   1       IdeSetAddress(IDE_BUS_NOT_USE);  //释放复位脚（即RESET脚为高）
  62   1       DelayXms(200);             //延时等待
  63   1       while(!IDE_IORDY);         //等待IO口空闲
  64   1      }
  65          ////////////////////////End of function//////////////////////////////
  66          
  67          /********************************************************************
  68          函数功能：从IDE硬盘读取16位数据的函数。
  69          入口参数：Address: 要访问的寄存器地址。
  70          返    回：读取到的数据。
  71          备    注：无。
  72          ********************************************************************/
  73          uint16 IdeRead16(uint8 Address)
  74          {
  75   1       uint16 Value;
  76   1       while(!IDE_IORDY);  //等待IO口空闲
  77   1       IdeSetAddress(Address); //设置要访问的寄存器地址
  78   1       IDE_DATA_L=0xFF;    //设置为高电平状态，准备读取数据
  79   1       IDE_DATA_H=0xFF;
  80   1       IdeClrDior();       //DIOR置低
  81   1       Value=(((uint16)(IDE_DATA_H))*256)+IDE_DATA_L; //读回16位数据
  82   1       IdeSetDior();       //DIOR置高
  83   1       IdeSetAddress(IDE_BUS_NOT_USE); //设置总线为高阻态
  84   1       return Value;
  85   1      }
  86          ////////////////////////End of function//////////////////////////////
  87          
  88          /********************************************************************
  89          函数功能：从IDE硬盘读取8位数据的函数。
  90          入口参数：Address: 要访问的寄存器地址。
  91          返    回：读取到的数据。
  92          备    注：无。
  93          ********************************************************************/
  94          uint8 IdeRead8(uint8 Address)
  95          {
  96   1       uint8 Value;
  97   1       while(!IDE_IORDY);  //等待IO空闲
  98   1       IdeSetAddress(Address); //设置要访问的寄存器地址
  99   1       IDE_DATA_L=0xFF;  //设置为高电平状态，准备读取数据
 100   1       IDE_DATA_H=0xFF;
 101   1       IdeClrDior();   //DIOR置低
 102   1       Value=IDE_DATA_L;  //读回8位数据
 103   1       IdeSetDior();   //DIOR置高
 104   1       IdeSetAddress(IDE_BUS_NOT_USE);  //设置总线为高阻态
 105   1       return Value;
 106   1      }
 107          ////////////////////////End of function//////////////////////////////
 108          
 109          /********************************************************************
 110          函数功能：写8位数据的函数。
 111          入口参数：Address: 需要访问的寄存器地址；Value: 要写入的数据。
 112          返    回：无。
 113          备    注：无。
 114          ********************************************************************/
 115          void IdeWrite8(uint8 Address,uint8 Value)
 116          {
 117   1       while(!IDE_IORDY);  //等待IO口空闲
C51 COMPILER V7.06   IDE                                                                   04/13/2009 14:27:04 PAGE 3   

 118   1       IdeSetAddress(Address);  //设置需要访问的寄存器地址
 119   1       IdeClrDiow();   //DIOW置低
 120   1       IDE_DATA_L=Value;  //发出数据
 121   1       IdeSetDiow();   //DIOW置高
 122   1       IdeSetAddress(IDE_BUS_NOT_USE);  //设置总线为高阻态
 123   1      }
 124          ////////////////////////End of function//////////////////////////////
 125          
 126          /********************************************************************
 127          函数功能：读取IDE硬盘状态寄存器的函数。
 128          入口参数：无。
 129          返    回：状寄存器的值。
 130          备    注：无。
 131          ********************************************************************/
 132          uint8 IdeReadStatus(void)
 133          {
 134   1       return IdeRead8(IDE_STATUS);  //读IDE STATUS寄存器
 135   1      }
 136          ////////////////////////End of function//////////////////////////////
 137          
 138          /********************************************************************
 139          函数功能：等待IDE硬盘忙碌函数。
 140          入口参数：无。
 141          返    回：无。
 142          备    注：当硬盘内部执行操作时，会进入忙碌状态，这时不能进行其它操作。
 143          ********************************************************************/
 144          void IdeWaitBusy(void)
 145          {
 146   1       while(IdeReadStatus()&0x80); //如果硬盘忙碌，则等待
 147   1      }
 148          ////////////////////////End of function//////////////////////////////
 149          
 150          /********************************************************************
 151          函数功能：IDE硬盘写命令的函数。
 152          入口参数：Command: 要写入的命令。
 153          返    回：无。
 154          备    注：无。
 155          ********************************************************************/
 156          void IdeWriteCommand(uint8 Command)
 157          {
 158   1       IdeWrite8(IDE_COMMAND,Command); //往IDE COMMAND寄存器写入命令
 159   1       IdeWaitBusy();  //等待IDE硬盘内部操作完成
 160   1      }
 161          ////////////////////////End of function//////////////////////////////
 162          
 163          /********************************************************************
 164          函数功能：获取磁盘信息的函数。
 165          入口参数：无。
 166          返    回：无。
 167          备    注：这里主要获取磁盘容量。当然你也可以修改代码查看其它需要的信息。
 168          ********************************************************************/
 169          void IdeGetInformation(void)
 170          {
 171   1       uint16 Value;
 172   1       uint16 i;
 173   1       //使用IDE_IDENTIFY_DRIVE命令获取磁盘信息
 174   1       IdeWriteCommand(IDE_Identify_Drive);
 175   1       for(i=0;i<57;i++) //前面57字信息这里未用
 176   1       {
 177   2        IdeRead16(IDE_DATA);
 178   2       }
 179   1       
C51 COMPILER V7.06   IDE                                                                   04/13/2009 14:27:04 PAGE 4   

 180   1       Value=IdeRead16(IDE_DATA); //当前容量低字(扇区数)
 181   1       DiskCapacity[3]=Value;
 182   1       DiskCapacity[2]=Value>>8;
 183   1       Value=IdeRead16(IDE_DATA); //当前容量高字(扇区数)
 184   1       DiskCapacity[1]=Value;
 185   1       DiskCapacity[0]=Value>>8;
 186   1       
 187   1       for(i=59;i<=255;i++) //读剩余字节
 188   1       {
 189   2        IdeRead16(IDE_DATA);
 190   2       }
 191   1      }
 192          ////////////////////////End of function//////////////////////////////
 193          
 194          /********************************************************************
 195          函数功能：设置LBA寄存器的函数。
 196          入口参数：LBA: 需要设置的LBA地址。
 197          返    回：无。
 198          备    注：无。
 199          ********************************************************************/
 200          void IdeWriteLba(uint32 LBA)
 201          {
 202   1       LBA&=0x0FFFFFFF; //注意LBA跟Drive/Head寄存器实际上是同一个
 203   1       LBA|=0xE0000000;
 204   1       IdeWrite8(IDE_LBA_BITS_24_27,(uint8)(LBA>>24));  //写对应的LBA寄存器
 205   1       IdeWrite8(IDE_LBA_BITS_16_23,(uint8)(LBA>>16));
 206   1       IdeWrite8(IDE_LBA_BITS_8_15, (uint8)(LBA>>8));
 207   1       IdeWrite8(IDE_LBA_BITS_0_7,  (uint8)(LBA));
 208   1      }
 209          ////////////////////////End of function//////////////////////////////
 210          
 211          /********************************************************************
 212          函数功能：设置操作扇区数的函数。
 213          入口参数：Count: 需要操作的扇区数（0表示256个）。
 214          返    回：无。
 215          备    注：无。
 216          ********************************************************************/
 217          void IdeWriteSectorCount(uint8 Count)
 218          {
 219   1       IdeWrite8(IDE_SECTOR_COUNT,Count); //写IDE SECTOR COUNT寄存器
 220   1      }
 221          ////////////////////////End of function//////////////////////////////
 222          
 223          /********************************************************************
 224          函数功能：IDE硬盘初始化函数。
 225          入口参数：无。
 226          返    回：无。
 227          备    注：无。
 228          ********************************************************************/
 229          void IdeInit(void)
 230          {
 231   1       IdeReset(); //复位
 232   1       IdeWaitBusy(); //等待忙
 233   1       IdeWrite8(IDE_DRIVE_HEAD,0xE0);  //设置为LBA模式
 234   1       IdeWaitBusy();  //等待忙
 235   1       IdeWrite8(IDE_DEVICE_CONTROL,0xFA);//没有中断模式
 236   1       IdeGetInformation(); //获取硬盘信息
 237   1      }
 238          ////////////////////////End of function//////////////////////////////


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V7.06   IDE                                                                   04/13/2009 14:27:04 PAGE 5   

   CODE SIZE        =    367    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
